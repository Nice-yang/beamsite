{"version":3,"sources":["components/pages/monitorManagement/style.js","components/pages/monitorManagement/HLSSource.js","components/pages/monitorManagement/videoSurveillance.js"],"names":["VideoWrapper","styled","div","loginLogo","HLSSource","props","context","hls","Hls","this","src","video","isSupported","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","destroy","type","Component","Option","FormItem","Item","Meta","VideoSurveillance","state","loading","bordered","monitorList","visible","page","size","totalPage","totalCount","focus","streamUrl","collect","e","item","target","setAttribute","console","log","getCameraFocus","cameraKey","then","res","handleCancel","setState","handleChange","value","changePage","content","onClick","playerPlay","title","extra","layout","style","float","marginTop","label","onChange","className","defaultValue","grid","gutter","column","dataSource","renderItem","i","cover","trigger","placement","minWidth","isVideoChild","disableCompletely","disableDefaultControls","controlName","avatar","current","pageSize","total","showQuickJumper","showTotal","maskClosable","footer","destroyOnClose","onCancel","width","autoHide","pageParams","getCameraList","responseData","data","items","PureComponent"],"mappings":"8oDAMO,IAAMA,EAAeC,IAAOC,IAAV,IA2COC,IAGAA,K,2BC9CXC,E,kDACjB,WAAYC,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IACRC,IAAM,IAAIC,IAFS,E,gEAKR,MAIOC,KAAKJ,MAApBK,EAJQ,EAIRA,IAAKC,EAJG,EAIHA,MAETH,IAAII,gBACJH,KAAKF,IAAIM,WAAWH,GACpBD,KAAKF,IAAIO,YAAYH,GACrBF,KAAKF,IAAIQ,GAAGP,IAAIQ,OAAOC,iBAAiB,WACpCN,EAAMO,a,6CAOVT,KAAKF,KACLE,KAAKF,IAAIY,Y,+BAKb,OACI,4BACIT,IAAKD,KAAKJ,MAAMK,IAChBU,KAAMX,KAAKJ,MAAMe,MAAQ,8B,GAhCFC,aCGhCC,E,IAAAA,OACDC,EAAW,IAAKC,KACfC,E,IAAAA,KAEDC,E,4MAEFC,MAAQ,CACJC,SAAS,EACTC,UAAU,EACVC,YAAa,GACbC,SAAS,EACTC,KAAM,EACNC,KAAM,GACNC,UAAW,EACXC,WAAY,EACZC,OAAO,EACPC,UAAW,I,EAIfC,QAAU,SAACC,EAAGC,GACVD,EAAEE,OAAOC,aAAa,QAAQ,WAC9BH,EAAEE,OAAOC,aAAa,QAAtB,mBAA2CF,EAAKJ,QAChDO,QAAQC,IAAIJ,EAAKJ,OACjB,IAAMhB,EAAOoB,EAAKJ,MAAQ,EAAI,EAC9BS,YAAeL,EAAKM,UAAW1B,GAAM2B,MAAK,SAAAC,GACtC,EAAKH,qB,EAkBbI,aAAe,SAAAV,GACXI,QAAQC,IAAIL,GACZ,EAAKW,SAAS,CACVnB,SAAS,K,EAmHjBoB,aAAe,SAACC,GACZ,EAAKF,SAAS,CACVd,MAAOgB,IACR,WACC,EAAKP,qB,EAQbQ,WAAa,SAACrB,EAAMC,GAChB,EAAKiB,SAAS,CACVlB,OACAC,SACD,WACC,EAAKY,qB,yDArJFL,GAAO,IACPH,EAAaG,EAAbH,UACP5B,KAAKyC,SAAS,CACVnB,SAAS,EACTM,UAAWA,IAEfM,QAAQC,IAAIP,K,+BAeN,IAAD,SAC2F5B,KAAKkB,MAA9FE,EADF,EACEA,SAAUC,EADZ,EACYA,YAAaC,EADzB,EACyBA,QAASC,EADlC,EACkCA,KAAMK,EADxC,EACwCA,UAAWJ,EADnD,EACmDA,KAAMC,EADzD,EACyDA,UAAWC,EADpE,EACoEA,WAAYP,EADhF,EACgFA,QAE/E0B,EAAU,SAACd,GAAD,OACZ,uBAAQe,QAAS,WACb,EAAKC,WAAWhB,KADpB,mCAIJ,OACI,kBAACxC,EAAD,KAEI,uBAAMyD,MAAO,iCAAUtB,EAAa,SAC9BN,SAAUA,EACVD,QAASA,EACT8B,MAAO,uBACHC,OAAO,SACPC,MAAO,CACHC,MAAO,QACPC,UAAW,SAEf,kBAACvC,EAAD,CAAUwC,MAAM,gBACZ,uBACIC,SAAUvD,KAAK0C,aACfc,UAAU,aACVC,aAAc,4BAEd,kBAAC5C,EAAD,CAAQ8B,MAAM,SAAd,4BACA,kBAAC9B,EAAD,CAAQ8B,MAAM,QAAd,gCAKd,uBACIe,KAAM,CAACC,OAAQ,GAAIC,OAAQ,GAC3BC,WAAYxC,EACZyC,WAAY,SAAC/B,EAAMgC,GAAP,OACR,sBAAMhD,KAAN,KACI,uBACIK,SAAUA,EACV4C,MACI,uBAASnB,QAASA,EAAQd,GAAOkC,QAAQ,QAAQC,UAAU,YACvD,yBAAKf,MAAO,CAACgB,SAAU,MAEfpC,EAAKH,UAED,kBAAC,SAAD,KACI,kBAAC,EAAD,CACIwC,cAAY,EACZnE,IAAK8B,EAAKH,YAEd,kBAAC,aAAD,CAAYyC,mBAAiB,EAACC,wBAAsB,KAGtD,kBAAC,SAAD,SAMtB,kBAACtD,EAAD,CACIgC,MAAOjB,EAAKwC,YACZC,OAAQ,uBAAGhB,UAAS,kBAAazB,EAAKJ,OAC3BqB,MAAM,2BACNF,QAAS,SAAChB,GAAD,OAAO,EAAKD,QAAQC,EAAGC,aAQ/D,uBAGI0C,QAASlD,EACTmD,SAAUlD,EACVmD,MAAOlD,EACPmD,iBAAiB,EACjBrB,SAAUvD,KAAK4C,WACfiC,UAAW,SAAAF,GACP,MAAM,SAAN,OAAWA,EAAX,cAKZ,uBACIG,cAAc,EACdxD,QAASA,EACTyD,OAAQ,KACRC,gBAAc,EACdC,SAAUjF,KAAKwC,aACf0C,MAAO,KAEP,yBAAK1B,UAAU,SAASL,MAAO,CAACE,UAAW,KACvC,kBAAC,SAAD,KACI,kBAAC,EAAD,CACIe,cAAY,EACZnE,IAAK2B,GAAwB,KAEjC,kBAAC,aAAD,CAAYuD,UAAU,GAClB,kBAAC,mBAAD,a,iCAmBjBV,EAASC,GAChBxC,QAAQC,IAAIsC,EAASC,K,uCAYP,IAAD,OACb1E,KAAKyC,SAAS,CACVtB,SAAS,IAFA,MAIenB,KAAKkB,MAC3BkE,EAAa,CACf7D,KANS,EAINA,KAEGC,KANG,EAIAA,KAEGG,MANH,EAIMA,OAInB0D,YAAcD,GAAY9C,MAAK,SAAAC,GAC3B,IAAM+C,EAAe/C,EAAIgD,KACzB,EAAK9C,SAAS,CACVhB,UAAW6D,EAAa7D,UACxBC,WAAY4D,EAAa5D,WAEzBL,YAAaiE,EAAaE,MAAQF,EAAaE,MAAQ,GAYvDrE,SAAS,S,0CAMjBnB,KAAKoC,qB,GAnNmBqD,iBAwNjBxE","file":"static/js/26.16ee2660.chunk.js","sourcesContent":["/**\r\n * Created by cynthia on 2019/8/5.\r\n */\r\nimport styled from 'styled-components';\r\nimport loginLogo from '../../../static/imgs/icon.png';\r\n\r\nexport const VideoWrapper = styled.div`\r\n    \r\n    .ant-card-head-wrapper {\r\n        height: 60px;\r\n        .ant-card-head-title {\r\n            font-size: 14px;\r\n            font-weight: 700;\r\n        }\r\n    }\r\n    .ant-card-head,.ant-card-body {\r\n        padding: 0;\r\n    }\r\n    .ant-card-head {\r\n        border-bottom: 0 none;\r\n    }\r\n    .ant-list-item{\r\n        padding: 10px 10px 0 10px !important;\r\n        background-color: #f2f3f4;\r\n        .ant-card-body {\r\n            //height: 40px;\r\n            line-height: 40px;\r\n            background-color: #f2f3f4;\r\n            padding-top: 15px;\r\n            .ant-row {\r\n            max-height: 500px;\r\n            overflow-y: auto;\r\n        }\r\n        }\r\n        .ant-card-meta-avatar {\r\n            float: right;\r\n            padding-right: 0;\r\n        }\r\n        \r\n        .ant-card-meta-title {\r\n            font-size: 14px;\r\n        }\r\n        .collect {\r\n            width: 25px;\r\n            height: 25px;\r\n            display: inline-block;\r\n            vertical-align: middle;\r\n            cursor: pointer;\r\n            &.true{\r\n              background: url(${loginLogo}) no-repeat -205px -2px;\r\n            }\r\n            &.false{\r\n              background: url(${loginLogo}) no-repeat -170px -3px;\r\n            }\r\n        }\r\n    }\r\n    \r\n`;","/**\r\n * Created by cynthia on 2019/9/19.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport Hls from 'hls.js';\r\nexport default class HLSSource extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.hls = new Hls();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // `src` is the property get from this component\r\n        // `video` is the property insert from `Video` component\r\n        // `video` is the html5 video element\r\n        const { src, video } = this.props;\r\n        // load hls video source base on hls.js\r\n        if (Hls.isSupported()) {\r\n            this.hls.loadSource(src);\r\n            this.hls.attachMedia(video);\r\n            this.hls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n                video.play();\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // destroy hls video source\r\n        if (this.hls) {\r\n            this.hls.destroy();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <source\r\n                src={this.props.src}\r\n                type={this.props.type || 'application/x-mpegURL'}\r\n            />\r\n        );\r\n    }\r\n}","import React, {PureComponent} from \"react\";\r\nimport {ControlBar, Player, VolumeMenuButton} from 'video-react';\r\nimport \"../../../../node_modules/video-react/dist/video-react.css\";\r\nimport {Button, Card, Form, List, Modal, Pagination, Popover, Select} from 'antd';\r\nimport {VideoWrapper} from './style';\r\nimport {getCameraFocus, getCameraList} from \"../../../axios\";\r\n// 特殊格式的视频转换\r\nimport HLSSource from './HLSSource';\r\n\r\nconst {Option} = Select;\r\nconst FormItem = Form.Item;\r\nconst {Meta} = Card;\r\n\r\nclass VideoSurveillance extends PureComponent {\r\n\r\n    state = {\r\n        loading: false,\r\n        bordered: false,\r\n        monitorList: [],\r\n        visible: false,\r\n        page: 1,\r\n        size: 12,\r\n        totalPage: 1,\r\n        totalCount: 0,\r\n        focus: false,\r\n        streamUrl: ''\r\n    };\r\n\r\n    // 关注\r\n    collect = (e, item) => {\r\n        e.target.setAttribute('class','collect')\r\n        e.target.setAttribute('class', `collect ${!item.focus}`)\r\n        console.log(item.focus);\r\n        const type = item.focus ? 0 : 1;\r\n        getCameraFocus(item.cameraKey, type).then(res => {\r\n            this.getCameraFocus();\r\n        })\r\n    }\r\n\r\n    playerPlay(item) {\r\n        const {streamUrl} = item\r\n        this.setState({\r\n            visible: true,\r\n            streamUrl: streamUrl\r\n        })\r\n        console.log(streamUrl);\r\n\r\n        // setCameraUrl(cameraKey, ppid).then(result => {\r\n        //     console.log(result);\r\n        //\r\n        // })\r\n    }\r\n\r\n    handleCancel = e => {\r\n        console.log(e);\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {bordered, monitorList, visible, page, streamUrl, size, totalPage, totalCount, loading} = this.state;\r\n\r\n        const content = (item) => (\r\n            <Button onClick={() => {\r\n                this.playerPlay(item)\r\n            }}>小窗口播放</Button>\r\n        )\r\n        return (\r\n            <VideoWrapper>\r\n\r\n                <Card title={'监控总数：' + totalCount + '个'}\r\n                      bordered={bordered}\r\n                      loading={loading}\r\n                      extra={<Form\r\n                          layout=\"inline\"\r\n                          style={{\r\n                              float: 'right',\r\n                              marginTop: '-7px'\r\n                          }}>\r\n                          <FormItem label=\"筛选\">\r\n                              <Select\r\n                                  onChange={this.handleChange}\r\n                                  className=\"selectTime\"\r\n                                  defaultValue={\"全部监控\"}\r\n                              >\r\n                                  <Option value=\"false\">全部监控</Option>\r\n                                  <Option value=\"true\">关注监控</Option>\r\n                              </Select>\r\n                          </FormItem>\r\n                      </Form>}>\r\n\r\n                    <List\r\n                        grid={{gutter: 16, column: 4}}\r\n                        dataSource={monitorList}\r\n                        renderItem={(item, i) => (\r\n                            <List.Item>\r\n                                <Card\r\n                                    bordered={bordered}\r\n                                    cover={\r\n                                        <Popover content={content(item)} trigger=\"hover\" placement=\"topRight\">\r\n                                            <div style={{minWidth: 200}}>\r\n                                                {\r\n                                                    item.streamUrl\r\n                                                        ?\r\n                                                        <Player>\r\n                                                            <HLSSource\r\n                                                                isVideoChild\r\n                                                                src={item.streamUrl}\r\n                                                            />\r\n                                                            <ControlBar disableCompletely disableDefaultControls>\r\n                                                            </ControlBar>\r\n                                                        </Player>\r\n                                                        : <Player></Player>\r\n                                                }\r\n                                            </div>\r\n                                        </Popover>\r\n                                    }\r\n                                >\r\n                                    <Meta\r\n                                        title={item.controlName}\r\n                                        avatar={<i className={`collect ${item.focus}`}\r\n                                                   title=\"添加关注\"\r\n                                                   onClick={(e) => this.collect(e, item)}\r\n                                        />}\r\n                                    />\r\n                                </Card>\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n\r\n                    <Pagination\r\n                        // showSizeChanger\r\n                        // onShowSizeChange={this.sizeChange}\r\n                        current={page}\r\n                        pageSize={size}\r\n                        total={totalPage}\r\n                        showQuickJumper={true}\r\n                        onChange={this.changePage}\r\n                        showTotal={total => {\r\n                            return `共${total}条`;\r\n                        }}\r\n                    />\r\n                </Card>\r\n\r\n                <Modal\r\n                    maskClosable={false}\r\n                    visible={visible}\r\n                    footer={null}\r\n                    destroyOnClose\r\n                    onCancel={this.handleCancel}\r\n                    width={800}\r\n                >\r\n                    <div className=\"player\" style={{marginTop: 10}}>\r\n                        <Player>\r\n                            <HLSSource\r\n                                isVideoChild\r\n                                src={streamUrl ? streamUrl : ''}\r\n                            />\r\n                            <ControlBar autoHide={false}>\r\n                                <VolumeMenuButton/>\r\n                            </ControlBar>\r\n                        </Player>\r\n                    </div>\r\n                </Modal>\r\n            </VideoWrapper>\r\n        )\r\n\r\n    }\r\n\r\n    // 筛选\r\n    handleChange = (value) => {\r\n        this.setState({\r\n            focus: value\r\n        }, () => {\r\n            this.getCameraFocus();\r\n        });\r\n    }\r\n\r\n    sizeChange(current, pageSize) {\r\n        console.log(current, pageSize);\r\n    }\r\n\r\n    changePage = (page, size) => {\r\n        this.setState({\r\n            page,\r\n            size\r\n        }, () => {\r\n            this.getCameraFocus();\r\n        });\r\n    }\r\n\r\n    getCameraFocus() {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        const {page, size, focus} = this.state;\r\n        const pageParams = {\r\n            page, size, focus\r\n        }\r\n        getCameraList(pageParams).then(res => {\r\n            const responseData = res.data;\r\n            this.setState({\r\n                totalPage: responseData.totalPage,\r\n                totalCount: responseData.totalCount,\r\n\r\n                monitorList: responseData.items ? responseData.items : [],\r\n                // {\r\n                //     cameraKey:'3xds111',\r\n                //         cameraType:'1',\r\n                //     controlName:'x遮罩层',\r\n                //     floor:'',\r\n                //     focus:true,\r\n                //     level:'',\r\n                //     memo:'',\r\n                //     ppid:'',\r\n                //     streamUrl:''\r\n                // }\r\n                loading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCameraFocus();\r\n    }\r\n\r\n}\r\n\r\nexport default VideoSurveillance"],"sourceRoot":""}